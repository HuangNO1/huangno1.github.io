<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ArchLinux - Tag - Rem Blog</title>
        <link>https://huangno1.github.io/tags/archlinux/</link>
        <description>ArchLinux - Tag - Rem Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>fh831.cp9gw@gmail.com (Huang Po-Hsun)</managingEditor>
            <webMaster>fh831.cp9gw@gmail.com (Huang Po-Hsun)</webMaster><lastBuildDate>Thu, 30 Sep 2021 08:17:28 &#43;0800</lastBuildDate><atom:link href="https://huangno1.github.io/tags/archlinux/" rel="self" type="application/rss+xml" /><item>
    <title>ArchLinx KDE 錢包禁用與解決 WIFI 密碼輸入</title>
    <link>https://huangno1.github.io/archlinux_disable_kde_wallet_and_no_password_wifi/</link>
    <pubDate>Thu, 30 Sep 2021 08:17:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/archlinux_disable_kde_wallet_and_no_password_wifi/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_disable_kde_wallet_and_no_password_wifi.png" referrerpolicy="no-referrer">
            </div><h2 id="前言">前言</h2>
<p>最近滾系統時發現萬惡的 KDE 錢包又出現了，然後每次進入系統都要輸入 KDE 錢包和 WIFI 密碼，讓我很難受，於是就有了這篇文章（別說我在摸魚水文章 @@。</p>
<h2 id="解決-kde-wallet">解決 KDE Wallet</h2>
<p>如果還沒安裝了 KDE 錢包管理就先去安裝它，<code>kwalletmanager</code>。</p>]]></description>
</item>
<item>
    <title>Mariadb 啟動服務失敗</title>
    <link>https://huangno1.github.io/archlinux_fail_to_start_mariadb/</link>
    <pubDate>Mon, 03 May 2021 16:03:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/archlinux_fail_to_start_mariadb/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_fail_to_start_mariadb.jpg" referrerpolicy="no-referrer">
            </div><h2 id="前言">前言</h2>
<p>在半年前，因為我的 ArchLinux 發行版系統在某次滾完系統後，我的 Mariadb 數據庫系統崩潰了，無法啟動服務，當時找了一下解決辦法，依然沒解決，網上雖然也有看到有些人也碰到跟我相似的問題，但都沒有具體好的解決辦法，像是</p>]]></description>
</item>
<item>
    <title>在 ArchLinux 上搭建 LaTeX 環境並使用 VScode 編寫</title>
    <link>https://huangno1.github.io/arhlinux_vscode_latex_install_configuration/</link>
    <pubDate>Fri, 07 Aug 2020 16:49:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/arhlinux_vscode_latex_install_configuration/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/arhlinux_vscode_latex_install_configuration.png" referrerpolicy="no-referrer">
            </div><h2 id="前言">前言</h2>
<p>紀錄一下我在 ArchLinux 上配置 LaTeX 的過程。</p>
<h2 id="安裝環境">安裝環境</h2>
<p>你可以直接安裝集合包，<a href="https://www.archlinux.org/groups/x86_64/texlive-most/" target="_blank" rel="noopener noreffer ">texlive-most</a> 包含很多 Tex Live 應用，但是這樣很佔空間，要安裝 2GB 的硬碟空間，所以你也可以選擇自己想要裝的部份，其中 <a href="https://www.archlinux.org/packages/extra/any/texlive-core/" target="_blank" rel="noopener noreffer ">texlive-core</a> 是必裝的。<strong><a href="https://www.archlinux.org/packages/extra/any/texlive-langchinese/" target="_blank" rel="noopener noreffer ">texlive-langchinese</a></strong> 是中文宏包 CTeX，讓 LaTeX 支持中文。</p>]]></description>
</item>
<item>
    <title>Linux 配置 npm</title>
    <link>https://huangno1.github.io/linux_npm_configuration/</link>
    <pubDate>Thu, 06 Feb 2020 11:27:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/linux_npm_configuration/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/linux_npm_configuration.png" referrerpolicy="no-referrer">
            </div><!--2020/02/06 edited by Huang Po-Hsun-->
<h2 id="前言">前言</h2>
<p><strong>npm</strong>（Node Package Manager）是 <strong>node 包管理器</strong>，是 <code>Node.js</code> 預設的、以 <code>JavaScript</code> 編寫的軟體套件管理系統。相信各位在開發 Vue 或是快應用等方面都會用到 npm，這裡我寫一下關於 npm 在 Linux 上的配置，因為在 Linux 使用 npm，因為在使用 npm 安裝套件時會發生權限不足問題還有下載源速度過慢，我將在這篇文章教大家如何配置 npm。</p>]]></description>
</item>
<item>
    <title>Arch Linux 打包教學</title>
    <link>https://huangno1.github.io/archlinux_makepkg/</link>
    <pubDate>Fri, 31 Jan 2020 11:27:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/archlinux_makepkg/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_makepkg.png" referrerpolicy="no-referrer">
            </div><!--2020/01/31 edited by Huang Po-Hsun-->
<h2 id="前言">前言</h2>
<p>這次之所以會有本次教學，是因為我大二上參加 2019 服創比賽，因為快應用開發 IDE 只有 <code>*.deb</code> 的 Ubuntu 版本，我當時將 <code>*.deb</code> 轉成 <code>tar.gz</code> 適用 Arch 發行版的包失敗，當時我是看<a href="https://linux.cn/article-9769-1.html" target="_blank" rel="noopener noreffer ">這網站</a>使用 <strong>Debtap</strong> 工具，雖然最後成功轉成 <code>tar.gz</code>，但是安裝時卻輸出該包的結構損壞，我也有在網上看到有建議 <strong>dkpg</strong>，然而實際上<strong>寫 PKGBUILD 才是最好的方法</strong>，當時是我朋友將<a href="https://aur.archlinux.org/packages/quickapp-ide/" target="_blank" rel="noopener noreffer ">快應用的官方 IDE</a> 打包到 AUR 上，最後安裝成功，打包中途他也遇到很多坑，最後他寫了一篇 <a href="https://junyussh.github.io/p/arch-linux-package-quick-start/" target="_blank" rel="noopener noreffer ">Arch Linux 打包教學</a>，但他這篇卻沒有給出實例，讓大多數第一次打包的人看不懂，就跟看官方文檔一樣。網上詳細優質的打包教學少之又少，這次我藉著一個機會體會到打包的過程，為了紀錄這過程，我寫了這篇教學。</p>]]></description>
</item>
<item>
    <title>在 Linux 配置 Java 開發環境到虛擬硬碟 - Java8、Tomcat8、Maven3、IntelliJ IDEA</title>
    <link>https://huangno1.github.io/linux_java_tomcat_maven_intellijidea_install_configuration/</link>
    <pubDate>Tue, 28 Jan 2020 11:27:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/linux_java_tomcat_maven_intellijidea_install_configuration/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/linux_java_tomcat_maven_intellijIDEA_install_configuration.png" referrerpolicy="no-referrer">
            </div><!--2020/01/28 edited by Huang Po-Hsun-->
<h2 id="前言">前言</h2>
<p>我在這篇會分享我是如何在 Arch 上配置 Java 的開發環境。再來我必須說的是，我這個<strong>適用於你的電腦的 Linux SSD (root) 空間不夠的情況</strong>，大部分的人是 Windows 與 Linux 雙系統，像我只能把 SSD 割 30GB 給我 Linux (這是因為我電腦上的 Windows 有被廠商更改過，限制了割出的量)，而虛擬硬碟卻可以割到 100GB 以上，我會教大家如何將 Java 環境裝到 <strong>/home</strong>。如果覺得自己 SSD 夠用，就<strong>直接從 AUR 上 yay 下來，直接略過此次教學 (ﾒ ﾟ皿ﾟ)ﾒ</strong>，畢竟會有人覺得我這樣的做法讓系統管理有點髒。不過關於環境變量的配置可以參考我這篇文章，不管是裝在 SSD 還是 HDD。</p>]]></description>
</item>
<item>
    <title>在 Linux 上控制 Python 版本 - pyenv</title>
    <link>https://huangno1.github.io/linux_python_pyenv/</link>
    <pubDate>Mon, 27 Jan 2020 15:26:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/linux_python_pyenv/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/linux_python_pyenv.png" referrerpolicy="no-referrer">
            </div><!--2020/01/27 edited by Huang Po-Hsun-->
<h2 id="前言">前言</h2>
<p>在 Linux 開發 Python 相關的項目，你是不是會碰到關於 Python 版本之類的問題？像是開發 Tensorflow 的時候碰到版本問題，<strong>原本 Python 3.7 可以支援 Tensorflow，但是忽然 Python 從 3.7 更新到 3.8.0</strong>，這時 Python 3.8 不支援 Tensorflow，你苦惱了，千辛萬苦的項目因為系統更新而導致版本不支援使項目暫停開發，這時 <strong>pyenv</strong> 將成為你的救星，如果你硬是不肯更新系統 Python 版本，你的系統將會得不到最新的體驗與安全並處於危險的不穩定狀態，系統更新真的很重要。</p>]]></description>
</item>
<item>
    <title>Archlinux KDE 動態桌布</title>
    <link>https://huangno1.github.io/archlinux_kde_video_wallpaper/</link>
    <pubDate>Wed, 15 Jan 2020 15:26:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/archlinux_kde_video_wallpaper/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_kde_video_wallpaper.png" referrerpolicy="no-referrer">
            </div><!--2020/01/15 edited by Huang Po-Hsun-->
<h2 id="前言">前言</h2>
<p><strong>Wallpapaer Engine</strong> 是非常優秀的動態桌布軟體，可惜的是這軟體不僅是需付費，也只支援 <strong>Windows</strong>，關於 <strong>KDE 動態桌布</strong>可能大家會有疑慮，<strong>Plasma KDE</strong> 究竟能不能實現<strong>動態桌布</strong>？答案是<strong>可以的</strong>，在這篇我將分享我完成動態桌布的過程。</p>]]></description>
</item>
<item>
    <title>Archlinux 安裝 Part 4 - 程序員終端標配 oh-my-zsh</title>
    <link>https://huangno1.github.io/archlinux_install_part4_on_my_zsh/</link>
    <pubDate>Sun, 05 Jan 2020 15:26:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/archlinux_install_part4_on_my_zsh/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_install_part4_on_my_zsh.png" referrerpolicy="no-referrer">
            </div><!--2020/01/05 edited by Huang Po-Hsun-->
<h2 id="前言">前言</h2>
<p>我想我在 Linux 上用最多也最重要的就是終端機 Konsole 了，我們默認的是 <strong>Bash</strong>，然而 <code>bash</code> 過於單調，也沒有自動補全，這時我們就需要開源項目 <code>oh-my-zsh</code>，在這篇教學我會寫一下，我配置 <code>oh-my-zsh</code> 的過程。</p>]]></description>
</item>
<item>
    <title>Archlinux 安裝 Part 3 - 基本軟體包安裝與 Mac 風界面設計</title>
    <link>https://huangno1.github.io/archlinux_install_part3_install_some_software_and_mac_style/</link>
    <pubDate>Sun, 05 Jan 2020 15:25:28 &#43;0800</pubDate>
    <author>Huang Po-Hsun</author>
    <guid>https://huangno1.github.io/archlinux_install_part3_install_some_software_and_mac_style/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_install_part3_install_some_software_and_mac_style.png" referrerpolicy="no-referrer">
            </div><!--2020/01/05 edited by Huang Po-Hsun-->
<h2 id="前言">前言</h2>
<p>我們在 Part 2 中已將基本的圖形界面以及中文字體等配置好，接下來我會在這篇中推薦一些實用的軟體與界面風格。</p>
<h2 id="文本編輯器">文本編輯器</h2>
<h3 id="kate">Kate</h3>
<p>可作為記事本使用。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-zsh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">sudo pacman -S kate</span></span></code></pre></div></div>
<h3 id="typora"><a href="https://www.typora.io/" target="_blank" rel="noopener noreffer ">Typora</a></h3>
<p>美化你的文本，編寫 Markdowm 語言，具有跨平台優點，Linux 上的 <code>*.docx</code> 拿到 Windows 上的 Office 容易走版，使用 Markdown 寫的文件不會有這問題。</p>]]></description>
</item>
</channel>
</rss>
